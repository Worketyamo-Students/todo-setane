/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-bold: 700;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-10 {
    margin-left: calc(var(--spacing) * 10);
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .table {
    display: table;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-4\.5 {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .h-60 {
    height: calc(var(--spacing) * 60);
  }
  .h-60\/100 {
    height: calc(60/100 * 100%);
  }
  .h-\[3\.5rem\] {
    height: 3.5rem;
  }
  .h-\[3rem\] {
    height: 3rem;
  }
  .h-\[15rem\] {
    height: 15rem;
  }
  .h-full {
    height: 100%;
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-50\/100 {
    width: calc(50/100 * 100%);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-80\/100 {
    width: calc(80/100 * 100%);
  }
  .w-82 {
    width: calc(var(--spacing) * 82);
  }
  .w-82\/100 {
    width: calc(82/100 * 100%);
  }
  .w-full {
    width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-y-13 {
    --tw-translate-y: calc(var(--spacing) * -13);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-33 {
    --tw-translate-y: calc(var(--spacing) * -33);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-50 {
    --tw-translate-y: calc(var(--spacing) * -50);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .bg-\[\#FAFAFA\] {
    background-color: #FAFAFA;
  }
  .bg-\[u\] {
    background-color: u;
  }
  .bg-\[ur\] {
    background-color: ur;
  }
  .bg-\[url\] {
    background-color: url;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-linear-to-tr {
    --tw-gradient-position: to top right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to top right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-\[url\(\"\"\)\] {
    background-image: url("");
  }
  .bg-\[url\(\'\'\)\] {
    background-image: url('');
  }
  .bg-\[url\(\'\.\.\'\)\] {
    background-image: url('..');
  }
  .bg-\[url\(\'\.\.\/\'\)\] {
    background-image: url('../');
  }
  .bg-\[url\(\'\.\.\/as\'\)\] {
    background-image: url('../as');
  }
  .bg-\[url\(\'\.\.\/assets\'\)\] {
    background-image: url('../assets');
  }
  .bg-\[url\(\'\.\.\/assets\/\'\)\] {
    background-image: url('../assets/');
  }
  .bg-\[url\(\'\.\.\/assets\/i\'\)\] {
    background-image: url('../assets/i');
  }
  .bg-\[url\(\'\.\.\/assets\/im\'\)\] {
    background-image: url('../assets/im');
  }
  .bg-\[url\(\'\.\.\/assets\/img\'\)\] {
    background-image: url('../assets/img');
  }
  .bg-\[url\(\'\.\.\/assets\/img\/\'\)\] {
    background-image: url('../assets/img/');
  }
  .bg-\[url\(\'\.\.\/assets\/img\/mo\'\)\] {
    background-image: url('../assets/img/mo');
  }
  .bg-\[url\(\'\.\.\/assets\/img\/mountains\'\)\] {
    background-image: url('../assets/img/mountains');
  }
  .bg-\[url\(\'\.\.\/assets\/img\/mountains\.\'\)\] {
    background-image: url('../assets/img/mountains.');
  }
  .bg-\[url\(\'\.\.\/assets\/img\/mountains\.svg\'\)\] {
    background-image: url('../assets/img/mountains.svg');
  }
  .bg-\[url\(\'\.\.\/q\'\)\] {
    background-image: url('../q');
  }
  .bg-\[url\(\'\;\'\)\] {
    background-image: url(';');
  }
  .bg-\[url\(\)\] {
    background-image: url();
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-9 {
    padding-inline: calc(var(--spacing) * 9);
  }
  .text-center {
    text-align: center;
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-\[0\.9rem\] {
    font-size: 0.9rem;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .tracking-\[0\.5rem\] {
    --tw-tracking: 0.5rem;
    letter-spacing: 0.5rem;
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .hover\:border-0 {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 0px;
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-linear-to-tr {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to top right;
        @supports (background-image: linear-gradient(in lab, red, red)) {
          --tw-gradient-position: to top right in oklab;
        }
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .sm\:visible {
    @media (width >= 40rem) {
      visibility: visible;
    }
  }
  .lg\:invisible {
    @media (width >= 64rem) {
      visibility: hidden;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:w-52\/100 {
    @media (width >= 64rem) {
      width: calc(52/100 * 100%);
    }
  }
  .lg\:w-55\/100 {
    @media (width >= 64rem) {
      width: calc(55/100 * 100%);
    }
  }
  .lg\:-translate-x-5 {
    @media (width >= 64rem) {
      --tw-translate-x: calc(var(--spacing) * -5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .lg\:justify-around {
    @media (width >= 64rem) {
      justify-content: space-around;
    }
  }
  .lg\:gap-5 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:opacity-25 {
    @media (width >= 64rem) {
      opacity: 25%;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:inline {
    &:where(.dark, .dark *) {
      display: inline;
    }
  }
  .dark\:bg-\[\#161721\] {
    &:where(.dark, .dark *) {
      background-color: #161721;
    }
  }
}
@layer base {
  body {
    font-family: "Josefin Sans", sans-serif;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-outline-style: solid;
    }
  }
}
